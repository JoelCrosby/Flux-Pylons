buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '0.1'
group = mod_packagename

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of("${java_version}")
    withSourcesJar()
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args = ['--username', 'joelcrosby']
            source sourceSets.main
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            source sourceSets.main
            mods {
                mod_id {
                    source sourceSets.main
                }
            }
        }
        
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fluxpylons {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        name 'Progwml6 maven'
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name 'Modmaven'
        url 'https://modmaven.dev'
    }
    maven {
        name 'CurseMaven'
        url 'https://www.cursemaven.com'
    }
    mavenCentral()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:${jei_version}")
    
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")

    implementation fg.deobf("com.teamcofh:cofh_core:${thermal_mc_version}-${cofh_core_version}")
//    implementation fg.deobf("com.teamcofh:thermal:${thermal_mc_version}-${thermal_version}")
//    implementation fg.deobf("com.teamcofh:thermal_foundation:${thermal_mc_version}-${thermal_foundation_version}")
//    implementation fg.deobf("com.teamcofh:thermal_expansion:${thermal_mc_version}-${thermal_expansion_version}")

    implementation fg.deobf("curse.maven:the-one-probe-245211:${theoneprobe_id}")
    implementation fg.deobf("curse.maven:jade-324717:${jade_id}")
}

processResources {
    inputs.property 'version', project.version
    filesMatching('**/META-INF/mods.toml') {
        expand 'file': [ jarVersion: project.version ], 
               'mod_id': mod_id, 
               'mod_version': mod_version, 
               'mod_vendor': mod_vendor, 
               'mod_name': mod_name, 
               'mod_forge_version': mod_forge_version, 
               'mod_loader_version': mod_loader_version, 
               'mod_minecraft_version': mod_minecraft_version, 
               'mod_mekanism_version_range': mod_mekanism_version_range, 
               'jei_version_range': jei_version_range
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : mod_vendor,
                "Specification-Version"   : "1",
                "Implementation-Title"    : mod_name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : mod_vendor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
